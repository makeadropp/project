services:
  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  user:
    image: oven/bun:latest
    volumes:
      - ./user:/app
    working_dir: /app
    command: sh -c "bun install && bun run db:wait && bun run dev"
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://user:password@postgres:5432/user_db
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - JWT_SECRET=iwqer98fywefrhpwefhpwq89erfyqwe
    depends_on:
      - postgres
      - rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=PathPrefix(`/user`)"
      - "traefik.http.routers.user.entrypoints=web"
      - "traefik.http.services.user.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.user-strip.stripprefix.prefixes=/user"
      - "traefik.http.routers.user.middlewares=user-strip@docker"

  address:
    image: oven/bun:latest
    volumes:
      - ./address:/app
    working_dir: /app
    command: sh -c "bun install && bun run db:wait && bun run dev"
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://user:password@postgres:5432/address_db
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - JWT_SECRET=iwqer98fywefrhpwefhpwq89erfyqwe
    depends_on:
      - postgres
      - rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.address.rule=PathPrefix(`/address`)"
      - "traefik.http.routers.address.entrypoints=web"
      - "traefik.http.services.address.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.address-strip.stripprefix.prefixes=/address"
      - "traefik.http.routers.address.middlewares=address-strip@docker"

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=dropp_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:admin123@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dropp_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  mongodb_data:
  postgres_data: