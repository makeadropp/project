openapi: 3.0.0
info:
  title: Order Management API
  description: API for managing delivery orders
  version: 1.0.0

servers:
  - url: http://localhost/order
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '6e3b7504-0c21-4300-8a9f-7f26b4b303be'
        userId:
          type: string
          format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
        pickupAddressId:
          type: string
          format: uuid
          example: 'aac0b0d4-4335-49dc-a182-196d4c3d9433'
        deliveryAddressId:
          type: string
          format: uuid
          example: 'aac0b0d4-4335-49dc-a182-196d4c3d9433'
        transportType:
          type: string
          enum: [DRONE, TRUCK, BIKE]
          example: 'DRONE'
        status:
          type: string
          enum: [PENDING, CONFIRMED, IN_TRANSIT, DELIVERED, CANCELLED]
          example: 'PENDING'
        estimatedDeliveryDate:
          type: string
          format: date-time
          example: '2024-03-20T15:00:00Z'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - pickupAddressId
        - deliveryAddressId
        - transportType

    OrderUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [PENDING, CONFIRMED, IN_TRANSIT, DELIVERED, CANCELLED]
          example: 'IN_TRANSIT'
        estimatedDeliveryDate:
          type: string
          format: date-time
          example: '2024-03-20T15:00:00Z'
      required:
        - status

    HealthCheck:
      type: object
      properties:
        status:
          type: string
          example: 'healthy'
        timestamp:
          type: string
          format: date-time

paths:
  /health:
    get:
      summary: Health check endpoint
      security: []
      responses:
        '200':
          description: Service health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'

  /:
    post:
      summary: Create a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /{orderId}:
    get:
      summary: Get order by ID
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: '6e3b7504-0c21-4300-8a9f-7f26b4b303be'
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '500':
          description: Internal server error

    put:
      summary: Update order status and estimated delivery date
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: '6e3b7504-0c21-4300-8a9f-7f26b4b303be'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '500':
          description: Internal server error

    delete:
      summary: Cancel an order
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: '123e4567-e89b-12d3-a456-426614174003'
      responses:
        '204':
          description: Order cancelled successfully
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '500':
          description: Internal server error

  /user/{userId}:
    get:
      summary: List orders for a specific user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error
